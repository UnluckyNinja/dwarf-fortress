abbreviate_string(::std::string&, int);
add_long_to_string(int, ::std::string&);
basic_random(int);
capitalize_string_first_word(::std::string&);
capitalize_string_words(::std::string&);
command_linest::init(::std::string const&);
convert_long_to_string(int, ::std::string&);
convert_string_to_long(::std::string&);
convert_string_to_ulong(::std::string&);
convert_ulong_to_string(unsigned int, ::std::string&);
CreateDirectory(char const*, void*);
curses_text_boxst::add_paragraph(::std::string const&, int);
enabler;
enabler_inputst::GetBindingDisplay(int);
enabler_inputst::GetKeyDisplay(int);
errorlog_string(char const*);
errorlog_string(::std::string const&);
file_compressorst::close_file();
file_compressorst::file_compressorst(char*, long, char*, long);
file_compressorst::flush_in_buffer();
file_compressorst::load_posnull_pointer();
file_compressorst::open_file(::std::string const&, char);
file_compressorst::read_file(::std::string&);
file_compressorst::read_file(void*, long);
file_compressorst::save_posnull_pointer(void*);
file_compressorst::write_file(::std::string&);
file_compressorst::write_file(void*, long);
find_directories_by_pattern(char const*, stringvectst&);
find_directories_by_pattern_with_exception(char const*, stringvectst&, char const*);
find_files_by_pattern(char const*, stringvectst&);
find_files_by_pattern_with_exception(char const*, svector< char* >&, char const*);
gamelog_string(::std::string const&);
get_number(int, ::std::string&);
get_ordinal(int, ::std::string&, bool);
get_slot_and_addbit_uchar(unsigned char&, long&, long, long);
GetTickCount();
__gmon_start__;
gps;
grab_token_expression(::std::string&, ::std::string&, int&, char);
grab_token_list_as_string(::std::string&, ::std::string&, int&, char);
grab_token_string_pos(::std::string&, ::std::string&, int, char);
grab_token_string(::std::string&, ::std::string&, char);
grab_token_string(::std::string&, ::std::string&, int&, char);
grab_variable_token(::std::string&, ::std::string&, char, int&, int);
graphicst::addcoloredst(char const*, char const*);
graphicst::addst(char const*, justification);
graphicst::addst(::std::string const&, justification);
graphicst::add_tile_grayscale(long, char, char);
graphicst::add_tile(long, char);
graphicst::color_square(long, long, unsigned char, unsigned char, unsigned char);
graphicst::dim_colors(long, long, char);
graphicst::erasescreen();
graphicst::get_mouse_text_coords(int&, int&);
graphicst::prepare_graphics(::std::string&);
graphicst::setclipping(long, long, long, long);
init_displayst::init_displayst();
initst::begin();
interfacest::addscreen(viewscreenst*, char, viewscreenst*);
interfacest::~interfacest();
interfacest::interfacest();
interfacest::loop();
interfacest::print_interface_token(long, justification);
itoa(int, char*, int);
_Jv_RegisterClasses;
KeybindingScreen::KeybindingScreen();
lower_case_string(::std::string&);
main;
MessageBox(int*, char const*, char const*, unsigned int);
mt_init();
mt_trandom();
musicsound;
musicsoundst::initsound();
musicsoundst::set_master_volume(long);
musicsoundst::set_song(::std::string&, int);
musicsoundst::startbackgroundmusic(int);
musicsoundst::stopbackgroundmusic();
pop_trandom_uniform_seed();
push_trandom_triple_seed(unsigned int, unsigned int, unsigned int);
push_trandom_uniform_seed(unsigned int);
renderer_offscreen::~renderer_offscreen();
renderer_offscreen::renderer_offscreen(int, int);
renderer_offscreen::save_to_file(::std::string const&);
renderer_offscreen::update_all(int, int);
replace_token_string(::std::string&, ::std::string&, int, char, ::std::string&, char);
r_num();
SDL_CreateRGBSurfaceFrom;
SDL_FreeSurface;
SDL_RWFromFile;
SDL_SaveBMP_RW;
simplify_string(::std::string&);
standardstringentry(char*, int, unsigned int, ::std::set< long >&);
standardstringentry(::std::string&, int, unsigned int, ::std::set< long >&);
textlinesst::load_raw_to_lines(char*);
text_system_file_infost::get_text(text_infost&);
text_system_file_infost::initialize_info();
textures::clone_texture(long);
textures::delete_texture(long);
textures::grayscale_texture(long);
textures::load_multi_pdim(::std::string const&, long*, long, long, bool, long*, long*);
textures::load(::std::string const&, bool);
upper_case_string(::std::string&);
viewscreen_movieplayerst::create(char, viewscreenst*);
viewscreen_movieplayerst::force_play(::std::string const&);
